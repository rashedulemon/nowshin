import pygame
import random

# Initialize Pygame
pygame.init()

# Constants
WIDTH, HEIGHT = 400, 400
SNAKE_SIZE = 20
SNAKE_SPEED = 15

# Colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)

# Create the window
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Snake Game")

# Initialize Snake and Food
snake = [(100, 50), (90, 50), (80, 50)]
food = (random.randrange(1, (WIDTH//SNAKE_SIZE)) * SNAKE_SIZE,
        random.randrange(1, (HEIGHT//SNAKE_SIZE)) * SNAKE_SIZE)

# Initialize direction
direction = "RIGHT"
change_to = direction

# Score
score = 0

# Function to display the score
def show_score(choice=1):
    font = pygame.font.SysFont('monospace', 24)
    score_text = font.render("Score: " + str(score), True, WHITE)
    screen.blit(score_text, (10, 10))

# Main game loop
game_over = False
while not game_over:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            game_over = True
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                change_to = "UP"
            if event.key == pygame.K_DOWN:
                change_to = "DOWN"
            if event.key == pygame.K_LEFT:
                change_to = "LEFT"
            if event.key == pygame.K_RIGHT:
                change_to = "RIGHT"

    # Validate the direction
    if change_to == "UP" and not direction == "DOWN":
        direction = "UP"
    if change_to == "DOWN" and not direction == "UP":
        direction = "DOWN"
    if change_to == "LEFT" and not direction == "RIGHT":
        direction = "LEFT"
    if change_to == "RIGHT" and not direction == "LEFT":
        direction = "RIGHT"

    # Move the snake
    if direction == "UP":
        head = (snake[0][0], snake[0][1] - SNAKE_SIZE)
    if direction == "DOWN":
        head = (snake[0][0], snake[0][1] + SNAKE_SIZE)
    if direction == "LEFT":
        head = (snake[0][0] - SNAKE_SIZE, snake[0][1])
    if direction == "RIGHT":
        head = (snake[0][0] + SNAKE_SIZE, snake[0][1])

    snake.insert(0, head)

    # Check if snake eats food
    if snake[0] == food:
        score += 1
        food = (random.randrange(1, (WIDTH//SNAKE_SIZE)) * SNAKE_SIZE,
                random.randrange(1, (HEIGHT//SNAKE_SIZE)) * SNAKE_SIZE)
    else:
        snake.pop()

    # Game over if the snake hits the boundaries or itself
    if (
        snake[0][0] >= WIDTH
        or snake[0][0] < 0
        or snake[0][1] >= HEIGHT
        or snake[0][1] < 0
        or head in snake[1:]
    ):
        game_over = True

    # Fill the screen
    screen.fill(BLACK)

    # Draw the snake and food
    for segment in snake:
        pygame.draw.rect(screen, GREEN, pygame.Rect(segment[0], segment[1], SNAKE_SIZE, SNAKE_SIZE))
    pygame.draw.rect(screen, WHITE, pygame.Rect(food[0], food[1], SNAKE_SIZE, SNAKE_SIZE))

    # Display the score
    show_score()

    pygame.display.update()

    # Control game speed
    pygame.time.Clock().tick(SNAKE_SPEED)

# Quit Pygame
pygame.quit()
